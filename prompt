
setopt prompt_percent

# (git info pwd) on rprompt
function update_rprompt() {
	local PROMPT_CWD_INFO=
	[[ "${PWD/#$HOME/~}" =~ '^~/?$' ]] || PROMPT_CWD_INFO="%F{green}%30<..<%~"

	local PROMPT_GIT_INFO=
	# TODO: change colors depending on the index status
	git branch &>/dev/null && PROMPT_GIT_INFO="%F{cyan}${$(git symbolic-ref HEAD 2>/dev/null)##*/} $(git rev-parse --short HEAD 2>/dev/null)"

	RPROMPT=
	[[ -z "${PROMPT_GIT_INFO}" && -z "${PROMPT_CWD_INFO}" ]] && return
	[[ ! -z "${PROMPT_GIT_INFO}" ]] && RPROMPT="${PROMPT_GIT_INFO}"
	[[ ! -z "${PROMPT_CWD_INFO}" ]] && RPROMPT="${PROMPT_CWD_INFO}"
	[[ ! -z "${PROMPT_GIT_INFO}" && ! -z "${PROMPT_CWD_INFO}" ]] && RPROMPT="${PROMPT_GIT_INFO} ${PROMPT_CWD_INFO}"

	RPROMPT="%F{white}(${RPROMPT}%F{white})%F{default}"
}

PROMPT="%F{white}[%F{yellow}%D{%H:%M:%S}%F{white}|%F{yellow}%h%F{white}]%(?. .%F{red}%?)%F{white}(%F{green}%n%F{white}@%F{cyan}%m%F{white})%F{blue}%#%F{default} "

function update_window_title() {
	printf "\e]1;zsh\a\e]2;%s\a" "${PWD/#$HOME/~}"
	[[ $(fc -ln -- -1 2>/dev/null) =~ '^git' ]] && update_rprompt
}

precmd_functions+=( update_window_title )
chpwd_functions+=( update_rprompt )

#execute each once on start
update_window_title
update_rprompt

enter_pipenv() {
	setopt localoptions extendedglob
	local -a pipfile
	pipfile=(./(../)#Pipfile(NY1:A))
	if [[ -e $pipfile ]]; then

		venv=$(PIPENV_IGNORE_VIRTUALENVS=1 pipenv --venv)
		if [[ "$venv" != "$VIRTUAL_ENV" ]]; then
			source $venv/bin/activate
			envfile=${pipfile%Pipfile}.env
			[[ -e $envfile ]] && source $envfile
		fi
	else
		if [[ -n $VIRTUAL_ENV ]]; then
			deactivate
		fi
	fi
}

# for .zshrc
#chpwd_functions+=( enter_pipenv )

# vim: syntax=sh:
